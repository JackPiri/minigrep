name: CI-build&test&lint&coverage

run-name: "Workflow performing all CI steps: build, unit tests, integration tests, linting, coverage"

on:
  pull_request:
    types: [opened, labeled]
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1

jobs:
  build-test-lint-coverage:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Print All Environment Variables
        run: env
      - name: Get sha
        run: |
          echo GITHUB_HEAD_REF is ${{ env.GITHUB_HEAD_REF }}
          SHA=$(curl -s "https://api.github.com/repos/JackPiri/minigrep/pulls?state=open" | jq ".[] | select(.head.label == \"JackPiri:${{ env.GITHUB_HEAD_REF }}\")" | jq ".head.sha")
          echo SHA is $SHA
          SHA="${SHA:1:-1}"
          echo SHA is $SHA
          echo "SHA=${{ github.event.inputs.sha }}" >> $GITHUB_ENV
      - name: Check sha
        run: echo $SHA
      - name: Build (release)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: cargo build --release --all-features
      - name: Build (debug)
        if: github.event_name != 'push' || github.ref != 'refs/heads/main'
        run: cargo build --all-features
      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Unit tests
        run: cargo test --lib --bins --no-fail-fast
      - name: Integration tests
        run: cargo test --test '*' --no-fail-fast
      - name: Linting
        if: matrix.os == 'ubuntu-latest'
        run: cargo clippy
      - name: Coverage
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.22.0'
          # version: '0.15.0' # OK
          # version: 'latest' # KO
          out-type: 'Stdout'
          args: '--ignore-tests'
      - name: Set Result
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}