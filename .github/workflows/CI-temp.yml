name: CI-temp
run-name: "Workflow performing CI check"

on:
  push:
    tags:
      - 'v[0-9].[0-9].[0-9]*'
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1

jobs:
  just_a_job:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Get target PR info
        run: |
          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          echo BRANCH_NAME is ${BRANCH_NAME}
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          ALL_PRS=$(curl -s --fail \
                    -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls?state=open")         
          LAST_COMMIT_SHA=$(echo ${ALL_PRS} | jq ".[] | select(.head.label == \"${GITHUB_REPOSITORY_OWNER}:${BRANCH_NAME}\")" | jq -r ".head.sha")
          echo LAST_COMMIT_SHA is ${LAST_COMMIT_SHA}
          echo "LAST_COMMIT_SHA=${LAST_COMMIT_SHA}" >> $GITHUB_ENV
          PR_LINK=$(echo ${ALL_PRS} | jq ".[] | select(.head.label == \"${GITHUB_REPOSITORY_OWNER}:${BRANCH_NAME}\")" | jq -r ".html_url")
          echo PR_LINK is ${PR_LINK}
          echo "PR_LINK=${PR_LINK}" >> $GITHUB_ENV
      - name: Set overall result
        run: |
          set -x

          OVERALL_STATUS="success"
 
          echo OVERALL_STATUS is ${OVERALL_STATUS}
          echo GITHUB_REPOSITORY is ${GITHUB_REPOSITORY}
          echo LAST_COMMIT_SHA is ${LAST_COMMIT_SHA}
 
          echo "OVERALL_STATUS=$OVERALL_STATUS" >> $GITHUB_ENV
  notify-slack:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    needs: [just_a_job]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set overall result
        run: |
          set -x

          OVERALL_STATUS_BIS="success"
 
          echo OVERALL_STATUS_BIS is ${OVERALL_STATUS_BIS}
 
          echo "OVERALL_STATUS_BIS=$OVERALL_STATUS_BIS" >> $GITHUB_ENV
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*A test message (5):* ${{OVERALL_STATUS_BIS}} - ${{GITHUB_REPOSITORY}}"
                  }
                }
              ]
            }

        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK




#curl -L \
#-X POST \
#-H "Accept: application/vnd.github+json" \
#-H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
#-H "X-GitHub-Api-Version: 2022-11-28" \
#https://api.github.com/repos/HorizenLabs/NH-core-ci_testing/statuses/${SHA} \
#-d '{"state":"success","context":"Orchestrator"}'